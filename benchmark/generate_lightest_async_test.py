# Generate benchmark source file for Lightest async with 1000 tests
lightestAsyncTestFile = open("lightest_async_test.cpp", "w")

lightestAsyncTestFile.write("""// Generated by generate_lightest_async_test.py
#include <lightest/lightest.h>
#include <lightest/data_analysis_ext.h>
#include <lightest/async_test_ext.h>

// Provide simpler file name
#undef TEST_FILE_NAME
#define TEST_FILE_NAME "lightest_async_test.cpp"

// Enable async testing
CONFIG(EnableAsyncTesting) {
  USE_ASYNC_GLOBAL();
}

""")

# Generate 1000 tests
# e.g. TEST(Test1) { REQ(1, ==, 1); }
for i in range(1000):
  lightestAsyncTestFile.write("TEST(Test" + str(i + 1) + ") { REQ(" + str(i) + ", ==, " + str(i) + "); }\n")

lightestAsyncTestFile.write("""
REPORT() {
  REPORT_PASS_RATE();
  REPORT_AVG_TIME();
}
""")

lightestAsyncTestFile.close()